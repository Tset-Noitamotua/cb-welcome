#!/bin/bash
# Post installation script

createFlag() {
    mkdir -p "/home/$USER/.config/crunchbang"
    touch "/home/$USER/.config/crunchbang/cb-welcome"
}

runInTerminal() {
    x-terminal-emulator -e 'cb-welcome'
    exit 0
}

# First run
if [[ $1 = '--firstrun' ]]; then
    if [[ -d /live/overlay || -e /home/$USER/.config/crunchbang/cb-welcome || ! $(groups) =~ ( |^)sudo( |$) ]]; then
        exit 1
    fi
    runInTerminal
fi

# Open in terminal
if [[ $1 = '--open' ]]; then
    runInTerminal
fi

createFlag

if ! [[ $(groups) =~ ( |^)sudo( |$) ]]; then
  echo 'Error: must be a member of the sudo group to run this script.' # TODO 'root' user is not a member of the sudo group. Is it meant to restrict root from executing this script?
  exit 1
fi

LIBDIR='/usr/lib/lib-cb-welcome'

# Importing variables and functions from cb-include.cfg
if [[ -f /usr/bin/cb-include.cfg ]]; then # TODO remove cb-include.cfg. Currently it has only one poorly written function to check internet connection.
    source '/usr/bin/cb-include.cfg'
else
    echo 'Error: Failed to locate cb-include.cfg'
    exit 1
fi

# Import prompt
if [[ -f ${LIBDIR}/prompt ]]; then
	source "${LIBDIR}/prompt"
else
	echo 'Error: Failed to locate prompt'
	exit 1
fi

# Run through steps
STEPS_BASIC=('apt-update' 'apt-dist-upgrade' 'install-printer-packages' 'install-java-packages' 'install-libreoffice' 'devel')
STEPS_DEVEL=('devel-install-version-control-tools' 'devel-install-ssh-server' 'devel-install-lamp-stack' 'devel-install-packaging-tools')
STEP=1
(( STEPS = ${#STEPS_BASIC[@]} + ${#STEPS_DEVEL[@]} + 2 )) # 2 is intro and fini

. "$LIBDIR/intro"
connectiontest

for curStep in "${STEPS_BASIC[@]}"; do
    ((STEP++))
    . "$LIBDIR/$curStep"
done

if [[ $DEVEL ]]; then
    for curStep in "${STEPS_DEVEL[@]}"; do
        ((STEP++))
        . "$LIBDIR/$curStep"
    done
fi

. "$LIBDIR/fini"

exit 0
